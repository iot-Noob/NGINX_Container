# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name persona.talhahub.io;

    return 301 https://$host$request_uri;
}

# Secure HTTPS server with reverse proxy
server {
    listen 443 ssl http2;
    server_name persona.talhahub.io;

    # SSL Certificates
    ssl_certificate     /etc/ssl/persona.talhahub.io/crt/fullchain.crt;
    ssl_certificate_key /etc/ssl/persona.talhahub.io/key/persona.talhahub.io.key;
    ssl_trusted_certificate /etc/ssl/ca/talha-rootCA.crt;

    # SSL settings (strong security)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;

    # HSTS for HTTPS enforcement
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Logs
    access_log /var/log/nginx/persona.access.log;
    error_log  /var/log/nginx/persona.error.log;

    # Reverse Proxy to internal service (adjust the IP:port if needed)
    location / {
      proxy_pass http://10.0.0.21:6900;
 
        # WebSocket + HTTP support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        # Forward headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
        location /api/ {
        proxy_pass http://10.0.0.22:1122/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error Pages
    error_page 502 /502.html;
    location = /502.html {
        root /var/www/;
        internal;
    }

    error_page 404 /404.html;
    location = /404.html {
        root /var/www/;
        internal;
    }
}
