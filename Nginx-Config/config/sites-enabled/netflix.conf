# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name netflix.talha.pk;

    return 301 https://$host$request_uri;
}

# Secure HTTPS server with SSL and Jellyfin reverse proxy
server {
    listen 443 ssl http2;
    server_name netflix.talha.pk;

    # SSL Certificates
    ssl_certificate     /etc/ssl/netflix.talha.pk/crt/fullchain.crt;
    ssl_certificate_key /etc/ssl/netflix.talha.pk/key/netflix.talha.pk.key;
    ssl_trusted_certificate /etc/ssl/ca/talha-rootCA.crt;


    # SSL settings (strong security)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;

    # HSTS for HTTPS enforcement (adjust max-age as needed)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Security Headers (optional but good for hardening)
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Access and error logs (optional paths)
    access_log /var/log/nginx/netflix.access.log;
    error_log  /var/log/nginx/netflix.error.log;

    # Jellyfin reverse proxy
location / {
    proxy_pass http://10.0.0.4:8096;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Forward headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Buffering off for Jellyfin
        proxy_buffering off;

}
error_page 502 /502.html;
location = /502.html {
    root /var/www/;
    internal;
}
error_page 404 /404.html;
location = /404.html {
    root /var/www/;
    internal;
}
}
